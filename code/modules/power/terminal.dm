// the underfloor wiring terminal for the APC
// autogenerated when an APC is placed
// all conduit connects go to this object instead of the APC
// using this solves the problem of having the APC in a wall yet also inside an area

/obj/machinery/power/terminal
	name = "terminal"
	icon_state = "term"
	desc = "It's an underfloor wiring terminal for power equipment."
	level = 1
	layer = TURF_LAYER
	var/obj/machinery/power/master = null
	anchored = 1
	directwired = 0		// must have a cable on same turf connecting to terminal
	layer = 2.6 // a bit above wires


/obj/machinery/power/terminal/New()
	..()
	var/turf/T = src.loc
	if(level==1) hide(T.intact)
	return

/obj/machinery/power/terminal/Destroy()
	if(master)
		master.disconnect_terminal()
	return ..()

/obj/machinery/power/terminal/hide(var/i)
	if(i)
		invisibility = 101
		icon_state = "term-f"
	else
		invisibility = 0
		icon_state = "term"

/obj/machinery/power/terminal/attackby(var/obj/item/weapon/W, var/mob/user)
	if(!istype(W, /obj/item/weapon/crowbar))
		return ..()
	user.visible_message("<span class='warning'>[user.name] starts removing [src].</span>", "<span class='notice'>You start removing [src].</span>")
	if(!do_after(user, 20))	return
	user.visible_message("<span class='warning'>[user.name] removed [src].</span>", "<span class='notice'>You successfully removed [src].</span>")

	new /obj/item/stack/cable_coil(src.loc, 5)
	new /obj/item/stack/sheet/metal(src.loc, 2)

	del(src)

/obj/item/terminal_frame
	name = "terminal frame"
	icon = 'icons/obj/power.dmi'
	icon_state = "term_frame"
	var/wired = 0

/obj/item/terminal_frame/New()
	..()
	pixel_x = rand(-10, 10)
	pixel_y = rand(-10, 10)

/obj/item/terminal_frame/attackby(var/obj/item/weapon/W, var/mob/user)
	if(istype(W, /obj/item/stack/cable_coil))
		if(wired)
			user << "[src] is already wired."
			return
		var/obj/item/stack/cable_coil/C = W
		if(C.use(5))
			wired = 1
			update_icon()
		else
			user << "There's not enough cable."

/obj/item/terminal_frame/afterattack(atom/target, mob/user)
	if(!isturf(target))
		return ..()
	var/turf/T = target
	if(!T.is_plating())
		user << "[src] could be placed only at plating."
		return
	if(!wired)
		user << "You should wire frame before installing."
		return

	var/terminal = locate(/obj/machinery/power/terminal) in T
	if(terminal)
		user << "Terminal is already installed here."
		return

	playsound(src.loc, 'sound/machines/click.ogg', 75, 1)
	var/obj/machinery/power/terminal/newTerminal = new(T)
	newTerminal.dir = src.dir

	usr.visible_message("[usr.name] attaches [src] to the floor.", "You attach [src] to the floor.")
	user.drop_item()

	del(src)

/obj/item/terminal_frame/attack_self(mob/user as mob)
	rotate()

/obj/item/terminal_frame/update_icon()
	if(wired)
		icon_state = "term"
	else
		icon_state = "term_frame"

/obj/item/terminal_frame/verb/rotate()
	set category = "Object"
	set name = "Rotate Frame"
	set src in view(1)

	if ( usr.stat || usr.restrained() )
		return

	src.dir = turn(src.dir, -90)

	return

